DOCUMENTATION
===============

I- Problem

We are to model the Yatzee Game using Spec Explorer.
	

II- Requirements Specification of the Yahtzee Game
	
Here are the description of the requirements (mainly from the Wikipedia page of the Yahtzee) and that have been considered in for the Model Program:

- The object of the game is to score the most points by rolling five dice to make certain combinations. 
- On each turn, a player gets up to three rolls of the dice. 
- The dice can be rolled up to three times in a turn/round. 
- In each roll-up, the player try to make one of the thirteen possible scoring combinations. 
- A game consists of thirteen rounds during which the player chooses which scoring combination is to be used in that round. 
- Once a combination has been used in the game, it cannot be used again. 
- The Yahtzee scorecard contains thirteen boxes divided between two sections: the upper section, and the lower section. 
- In the upper section, each box is scored by summing the total number of dice faces matching that box. 
- If a player scores a total of at least 63 points in these boxes, a bonus of 35 points is added to the upper section score 
- The scoring combinations have varying point values, some of which are fixed values and others of which have the cumulative value of the dice
- After the third roll, the player must find a place to put the score (though he or she can choose to end the turn and score after one or two rolls, if desired) .
- R9: If the resulting combination of dice will not fit in any unused scoring category, the player must place a "zero" in one of the unused boxes. 
- Each player's total score is calculated by summing all thirteen score boxes. 
- A Yahtzee occurs when all five dice have the same value during one roll. 
- Yahtzee is the most difficult combination to throw in a game and has the high score of 50 points. 
- If a player scores more additional Yahtzees during the same game, that player is awarded Bonus Yahtzees. 
- Bonus Yahtzees are worth 100 points each. 
- Bonus Yatzees are only awarded for subsequent Yahtzees if the first Yahtzee was placed in the 50-point Yahtzee score box. 
- A player must still score in an empty box as per normal in addition to receiving the 100 point bonus. 
- Additional Yahtzees may be used as wild cards in the Lower Section (scoring full points in a lower section box, such as a long straight, despite not having the normally required dice) provided that the corresponding Upper Section box has been filled. 
- In case a Yahtzee occurs "after" the Yahtzee box contains zero, the Bonus Yahtzee score is not awarded; but the wild card rule stated above still applies. 

Info: Yahtzee may also be played solitaire with the player attempting to reach the maximum possible score of 375 (1575 if bonuses are included) 


Uncovered Yatzee Rule:
- If a player scores one or more additional Yahtzees during the same game, that player is given bonus chips that correspond to each additional Yahtzee that a player rolls. Bonus chips are only awarded for subsequent Yahtzees if the first Yahtzee was placed in the 50-point Yahtzee score box.

- Rolling of a dice (Partially): The rolling of dices seems to be a tricky feature to test. We should expect from the implementation procedure of the "Roll" to have no input parameter and to return "random" values of dices for each separate call to it. Thus, it has a non-deterministic behaviour.
	There is a "Choice.Some<T>(..)" statement available in the spec explorer language solely define to handle non-deterministic actions. However, the feature only supports IEnumerable Type.
 	 

III- Spec Explorer Rules definitions for Yahtzee

- Roll the dice
void Roll(int dice1, int dice2, int dice3, int dice4, int dice5)

This action represents the rolling of a dice by the player. In fact, like we said it is a "mockup" action we use to simulate desired values of dice and is NOT to be tested against the SUT. Each integer variable of name "dicex"  corresponds to the value we will assigned to each dice as result of a rolling.

- Score in a score box
int Score(string idBox, out int scoreForTheRound)

This represents the scoring of the combination of dice values in an empty score box. The procedure returns the current overall score of the player. The "out" parameter represents the score value for the box in which we just scored.

- Hold of a dice
void Hold(bool dice1HeldValue, bool dice2HeldValue, 
            bool dice3HeldValue, bool dice4HeldValue, bool dice5HeldValue)

This represents the action of holding a dice. Each boolean parameter of the form "dicexHeldValue" refers to the holding state of the corresponding "dicex".



IV- Model-base Testing Approach 

Our testing goal was to produce a test suite generated by different machines that exercise every features of the Yatzee Game  (Roll, Hold, Scoring in different boxes) in a fairly exhaustive manner.
So, we provide at least:
- One machine for testing the Roll.
- Two machines testing respectively single and multiple Holding of dices.
- Fifteen machines exercising the scoring in the thirteen boxes plus the lower and upper bonus cases.
